
// // backend/config/db.go
// package config

// import (
// 	"golang.org/x/crypto/bcrypt"
// 	"github.com/KBook22/System-Analysis-and-Design/entity"
// 	"gorm.io/driver/sqlite"
// 	"gorm.io/gorm"
// 	"time"
// )
// var db *gorm.DB

// func DB() *gorm.DB {
// 	return db
// }
// func ConnectionDB() {
// 	database, err := gorm.Open(sqlite.Open("sa-project.db"), &gorm.Config{})
// 	if err != nil {
// 		panic("failed to connect database")
// 	}
// 	db = database
// }

// func SetupDatabase() {
// 	// Migrate the schema
// 	db.AutoMigrate(
// 		&entity.User{},
// 		&entity.Genders{},
// 		&entity.Employer{},
// 		&entity.Student{},
// 		&entity.Jobpost{},
// 		&entity.Reviews{},
// 		&entity.Ratingscores{},
// 		&entity.Payments{},
// 		&entity.PaymentMethods{},
// 		&entity.BillableItems{},
// 		&entity.PaymentReports{},
// 		&entity.Statuses{},
// 		&entity.Banks{},
// 		&entity.Discounts{},
// 		&entity.Orders{},
// 		&entity.AddonServices{},
// 	)
// }

// func SeedDatabase() {
// 	// --- Master Data (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å) ---

// 	// Genders
// 	genders := []entity.Genders{
// 		{Model: gorm.Model{ID: 1}, Gender: "‡∏ä‡∏≤‡∏¢"},
// 		{Model: gorm.Model{ID: 2}, Gender: "‡∏´‡∏ç‡∏¥‡∏á"},
// 		{Model: gorm.Model{ID: 3}, Gender: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"},
// 	}
// 	for _, g := range genders {
// 		db.FirstOrCreate(&g, g.ID)
// 	}

// 	// Rating Scores
// 	ratingScores := []entity.Ratingscores{
// 		{Model: gorm.Model{ID: 1}, Ratingscorename: "‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å"},
// 		{Model: gorm.Model{ID: 2}, Ratingscorename: "‡πÅ‡∏¢‡πà"},
// 		{Model: gorm.Model{ID: 3}, Ratingscorename: "‡∏û‡∏≠‡πÉ‡∏ä‡πâ"},
// 		{Model: gorm.Model{ID: 4}, Ratingscorename: "‡∏î‡∏µ"},
// 		{Model: gorm.Model{ID: 5}, Ratingscorename: "‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°"},
// 	}
// 	for _, rs := range ratingScores {
// 		db.FirstOrCreate(&rs, rs.ID)
// 	}

// 	// Payment Method
// 	paymentMethod := entity.PaymentMethods{
// 		Model:      gorm.Model{ID: 1},
// 		Methodname: "‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå",
// 	}
// 	db.FirstOrCreate(&paymentMethod, paymentMethod.ID)

// 	// Banks
// 	banks := []entity.Banks{
// 		{Model: gorm.Model{ID: 1}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"},
// 		{Model: gorm.Model{ID: 2}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô"},
// 		{Model: gorm.Model{ID: 3}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢"},
// 		{Model: gorm.Model{ID: 4}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢"},
// 		{Model: gorm.Model{ID: 5}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏ò‡∏ô‡∏ä‡∏≤‡∏ï"},
// 		{Model: gorm.Model{ID: 6}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå"},
// 	}
// 	for _, b := range banks {
// 		db.FirstOrCreate(&b, b.ID)
// 	}

// 	// Statuses
// 	paymentStatuses := []entity.Statuses{
// 		{Model: gorm.Model{ID: 1}, StatusName: "‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞"},
// 		{Model: gorm.Model{ID: 2}, StatusName: "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"},
// 		{Model: gorm.Model{ID: 3}, StatusName: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"},
// 		{Model: gorm.Model{ID: 4}, StatusName: "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"},
// 	}
// 	for _, ps := range paymentStatuses {
// 		db.FirstOrCreate(&ps, ps.ID)
// 	}

// 	// Discounts
// 	discounts := []entity.Discounts{
// 		{
// 			Model:         gorm.Model{ID: 1},
// 			DiscountName:  "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%",
// 			DiscountValue: 10,
// 			Discounttype:  "percentage",
// 			ValidFrom:     time.Date(2024, 8, 1, 0, 0, 0, 0, time.UTC),
// 			ValidUntil:    time.Date(2024, 8, 31, 0, 0, 0, 0, time.UTC),
// 		},
// 		{
// 			Model:         gorm.Model{ID: 2},
// 			DiscountName:  "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 15%",
// 			DiscountValue: 10,
// 			Discounttype:  "percentage",
// 			ValidFrom:     time.Date(2024, 9, 1, 0, 0, 0, 0, time.UTC),
// 			ValidUntil:    time.Date(2024, 9, 30, 0, 0, 0, 0, time.UTC),
// 		},
// 	}
// 	for _, d := range discounts {
// 		db.FirstOrCreate(&d, d.ID)
// 	}

// 	// Billable Items
// 	billableItems := []entity.BillableItems{
// 		{Model: gorm.Model{ID: 1}, Description: "‡∏Ñ‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π", Amount: 250},
// 		{Model: gorm.Model{ID: 2}, Description: "‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°", Amount: 50},
// 	}
// 	for _, bi := range billableItems {
// 		db.FirstOrCreate(&bi, bi.ID)
// 	}

// 	passwordEmp, _ := bcrypt.GenerateFromPassword([]byte("123456"), 14)
// 	passwordStd, _ := bcrypt.GenerateFromPassword([]byte("777777"), 14)

// 	users := []entity.User{
// 		{Model: gorm.Model{ID: 1}, Username: "hormok_hr", Password: string(passwordEmp), Role: "Employer"},
// 		{Model: gorm.Model{ID: 2}, Username: "panida_t", Password: string(passwordStd), Role: "Student"},
// 	}
// 	for _, u := range users {
// 		db.FirstOrCreate(&u, u.ID)
// 	}

// 	birthdayEmp, _ := time.Parse("2006-01-02", "1990-05-15")
// 	employer := entity.Employer{
// 		Model:         gorm.Model{ID: 1},
// 		Firstname:     "‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥",
// 		Lasttname:     "‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
// 		Email:         "hr@hormok.co.th",
// 		CompanyName:   "‡∏´‡πà‡∏≠‡∏´‡∏°‡∏Å ‡∏™‡∏ï‡∏π‡∏î‡∏¥‡πÇ‡∏≠",
// 		ContactPerson: "‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥ ‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
// 		Birthday:      birthdayEmp,
// 		Phone:         "081-234-5678",
// 		Address:       "123 ‡∏°‡∏ó‡∏™. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π 4 ‡∏ï.‡∏™‡∏∏‡∏£‡∏ô‡∏≤‡∏£‡∏µ ‡∏≠.‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏à.‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤",
// 		UserID:        users[0].ID,
// 		GenderID:      genders[0].ID,
// 	}
// 	db.FirstOrCreate(&employer, employer.ID)

// 	birthdayStd, _ := time.Parse("2006-01-02", "2004-12-31")
// 	student := entity.Student{
// 		Model:       gorm.Model{ID: 1},
// 		Email:       "panida.t@gmail.com",
// 		FirstName:   "‡∏û‡∏ô‡∏¥‡∏î‡∏≤",
// 		LastName:    "‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
// 		Birthday:    birthdayStd,
// 		Age:         20,
// 		GPA:         3.5,
// 		Year:        3,
// 		Faculty:     "‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
// 		Phone:       "081-234-2154",
// 		Skills:      "‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
// 		UserID:      users[1].ID,
// 		GenderID:    genders[1].ID,
// 		BankAccount: "8630211849",
// 		BankID:      banks[3].ID,
// 	}
// 	db.FirstOrCreate(&student, student.ID)

// 	jobposts := []entity.Jobpost{
// 		{
// 			Model:       gorm.Model{ID: 1},
// 			Title:       "‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
// 			Description: "‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏¢‡πá‡∏ô 17.00 - 20.00 ‡∏ô.",
// 			Status:      "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
// 			Salary:      250,
// 			EmployerID:  employer.ID,
// 		},
// 		{
// 			Model:       gorm.Model{ID: 2},
// 			Title:       "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û",
// 			Description: "‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡πÄ‡∏û‡∏à",
// 			Status:      "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
// 			Salary:      600,
// 			EmployerID:  employer.ID,
// 		},
// 	}
// 	for _, jp := range jobposts {
// 		db.FirstOrCreate(&jp, jp.ID)
// 	}

// 	// Payment
// 	payment1 := entity.Payments{
// 		Model:            gorm.Model{ID: 1},
// 		Proof_of_Payment: "proof_01.jpg",
// 		Amount:           billableItems[0].Amount,
// 		Datetime:         time.Now().Add(-24 * time.Hour),
// 		BillableItemID:   billableItems[0].ID,
// 		PaymentMethodID:  paymentMethod.ID,
// 		StatusID:         paymentStatuses[1].ID,
// 	}
// 	db.FirstOrCreate(&payment1, payment1.ID)
// }

// func ConnectDB() {
// 	database, err := gorm.Open(sqlite.Open("system_analysis.db"), &gorm.Config{})
// 	if err != nil {
// 		panic("Failed to connect to database!")
// 	}

// 	// ‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏° Entity ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‚ú®
// 	err = database.AutoMigrate(
// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å ---
// 		&entity.User{},
// 		&entity.Admin{},
// 		&entity.Student{},
// 		&entity.Employer{}, // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏≤‡∏¢‡∏à‡πâ‡∏≤‡∏á
// 		&entity.Genders{},
// 		&entity.Banks{},
// 		&entity.Admin{},

// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ---
// 		&entity.StudentProfilePost{},

// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö Q&A ---
// 		&entity.FAQ{},
// 		&entity.RequestTicket{},
// 		&entity.TicketReply{},
// 	)
// 	if err != nil {
// 		panic("Failed to migrate database!")
// 	}

// 	db = database
// }



// backend/config/db.go
// package config

// import (
// 	"golang.org/x/crypto/bcrypt"
// 	"github.com/KBook22/System-Analysis-and-Design/entity"
// 	"gorm.io/driver/sqlite"
// 	"gorm.io/gorm"
// 	"time"
// )

// var db *gorm.DB

// func DB() *gorm.DB {
// 	return db
// }

// // ‡πÉ‡∏ä‡πâ sa-project.db ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
// func ConnectionDB() {
// 	database, err := gorm.Open(sqlite.Open("sa-project.db"), &gorm.Config{})
// 	if err != nil {
// 		panic("failed to connect database")
// 	}

// 	db = database

// 	// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Skills entity ‡πÉ‡∏ô AutoMigrate
// 	err = db.AutoMigrate(
// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å ---
// 		&entity.User{},
// 		&entity.Admin{},
// 		&entity.Student{},
// 		&entity.Employer{},
// 		&entity.Genders{},
// 		&entity.Banks{},
		
// 		// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Skills table
// 		&entity.Skill{},
		
// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö Job / Payment ‡πÄ‡∏î‡∏¥‡∏° ---
// 		&entity.Jobpost{},
// 		&entity.Reviews{},
// 		&entity.Ratingscores{},
// 		&entity.Payments{},
// 		&entity.PaymentMethods{},
// 		&entity.BillableItems{},
// 		&entity.PaymentReports{},
// 		&entity.Statuses{},
// 		&entity.Discounts{},
// 		&entity.Orders{},
// 		&entity.AddonServices{},
		
// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö Student Profile Post ---
// 		&entity.StudentProfilePost{},
		
// 		// --- ‡∏£‡∏∞‡∏ö‡∏ö Q&A ---
// 		&entity.FAQ{},
// 		&entity.RequestTicket{},
// 		&entity.TicketReply{},
// 	)

// 	if err != nil {
// 		panic("Failed to migrate database!")
// 	}
// }

// func SeedDatabase() {
// 	// Genders
// 	genders := []entity.Genders{
// 		{Model: gorm.Model{ID: 1}, Gender: "‡∏ä‡∏≤‡∏¢"},
// 		{Model: gorm.Model{ID: 2}, Gender: "‡∏´‡∏ç‡∏¥‡∏á"},
// 		{Model: gorm.Model{ID: 3}, Gender: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"},
// 	}

// 	for _, g := range genders {
// 		db.FirstOrCreate(&g, g.ID)
// 	}

// 	// Rating Scores
// 	ratingScores := []entity.Ratingscores{
// 		{Model: gorm.Model{ID: 1}, Ratingscorename: "‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å"},
// 		{Model: gorm.Model{ID: 2}, Ratingscorename: "‡πÅ‡∏¢‡πà"},
// 		{Model: gorm.Model{ID: 3}, Ratingscorename: "‡∏û‡∏≠‡πÉ‡∏ä‡πâ"},
// 		{Model: gorm.Model{ID: 4}, Ratingscorename: "‡∏î‡∏µ"},
// 		{Model: gorm.Model{ID: 5}, Ratingscorename: "‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°"},
// 	}

// 	for _, rs := range ratingScores {
// 		db.FirstOrCreate(&rs, rs.ID)
// 	}

// 	// Payment Method
// 	paymentMethod := entity.PaymentMethods{
// 		Model: gorm.Model{ID: 1},
// 		Methodname: "‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå",
// 	}
// 	db.FirstOrCreate(&paymentMethod, paymentMethod.ID)

// 	// Banks
// 	banks := []entity.Banks{
// 		{Model: gorm.Model{ID: 1}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"},
// 		{Model: gorm.Model{ID: 2}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô"},
// 		{Model: gorm.Model{ID: 3}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢"},
// 		{Model: gorm.Model{ID: 4}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢"},
// 		{Model: gorm.Model{ID: 5}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏ò‡∏ô‡∏ä‡∏≤‡∏ï"},
// 		{Model: gorm.Model{ID: 6}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå"},
// 	}

// 	for _, b := range banks {
// 		db.FirstOrCreate(&b, b.ID)
// 	}

// 	// Statuses
// 	paymentStatuses := []entity.Statuses{
// 		{Model: gorm.Model{ID: 1}, StatusName: "‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞"},
// 		{Model: gorm.Model{ID: 2}, StatusName: "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"},
// 		{Model: gorm.Model{ID: 3}, StatusName: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"},
// 		{Model: gorm.Model{ID: 4}, StatusName: "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"},
// 	}

// 	for _, ps := range paymentStatuses {
// 		db.FirstOrCreate(&ps, ps.ID)
// 	}

// 	// Discounts
// 	discounts := []entity.Discounts{
// 		{
// 			Model: gorm.Model{ID: 1},
// 			DiscountName: "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%",
// 			DiscountValue: 10,
// 			Discounttype: "percentage",
// 			ValidFrom: time.Date(2024, 8, 1, 0, 0, 0, 0, time.UTC),
// 			ValidUntil: time.Date(2024, 8, 31, 0, 0, 0, 0, time.UTC),
// 		},
// 		{
// 			Model: gorm.Model{ID: 2},
// 			DiscountName: "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 15%",
// 			DiscountValue: 15,
// 			Discounttype: "percentage",
// 			ValidFrom: time.Date(2024, 9, 1, 0, 0, 0, 0, time.UTC),
// 			ValidUntil: time.Date(2024, 9, 30, 0, 0, 0, 0, time.UTC),
// 		},
// 	}

// 	for _, d := range discounts {
// 		db.FirstOrCreate(&d, d.ID)
// 	}

// 	// Billable Items
// 	billableItems := []entity.BillableItems{
// 		{Model: gorm.Model{ID: 1}, Description: "‡∏Ñ‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π", Amount: 250},
// 		{Model: gorm.Model{ID: 2}, Description: "‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°", Amount: 50},
// 	}

// 	for _, bi := range billableItems {
// 		db.FirstOrCreate(&bi, bi.ID)
// 	}

// 	// ‚úÖ Skills ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå
// 	skills := []entity.Skill{
// 		// üõçÔ∏è ‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡∏≤‡∏¢
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ä‡∏á‡∏Å‡∏≤‡πÅ‡∏ü"},
// 		{SkillName: "‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏ô‡∏ä‡∏±‡πâ‡∏ô"},
		
// 		// üìä ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô  
// 		{SkillName: "Microsoft Office"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏£‡πá‡∏ß"},
// 		{SkillName: "Excel ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
// 		{SkillName: "PowerPoint"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"},
		
// 		// üåê ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•
// 		{SkillName: "Facebook Marketing"},
// 		{SkillName: "Instagram Marketing"},
// 		{SkillName: "TikTok Marketing"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ Canva"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Content"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"},
// 		{SkillName: "Live ‡∏™‡∏î"},
		
// 		// üó£Ô∏è ‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£
// 		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
// 		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏™‡∏ô‡∏ó‡∏ô‡∏≤"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠"},
// 		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏à‡∏µ‡∏ô"},
// 		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô"},
// 		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ"},
		
// 		// üìö ‡∏á‡∏≤‡∏ô‡∏™‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏ß
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡∏Ñ‡∏ì‡∏¥‡∏ï"},
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©"},
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"},
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå"},
// 		{SkillName: "‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
// 		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏î‡πá‡∏Å"},
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡∏î‡∏ô‡∏ï‡∏£‡∏µ"},
// 		{SkillName: "‡∏™‡∏≠‡∏ô‡πÄ‡∏ï‡πâ‡∏ô"},
		
// 		// üé® ‡∏á‡∏≤‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏õ‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏ô‡∏ï‡∏£‡∏µ"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á"},
		
// 		// üöó ‡∏á‡∏≤‡∏ô‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡∏µ‡πà
// 		{SkillName: "‡∏Ç‡∏±‡∏ö‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå"},
// 		{SkillName: "‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"},
// 		{SkillName: "‡πÄ‡∏î‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡∏µ‡πà‡∏≠‡∏≤‡∏´‡∏≤‡∏£"},
// 		{SkillName: "‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á"},
// 		{SkillName: "‡∏Ç‡∏±‡∏ö Grab"},
// 		{SkillName: "‡∏Ç‡∏±‡∏ö Foodpanda"},
		
// 		// üíª IT ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏°‡∏¥‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
// 		{SkillName: "HTML/CSS ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
// 		{SkillName: "Photoshop ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Google Workspace"},
		
// 		// üèÉ‚Äç‚ôÄÔ∏è ‡∏á‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏ß‡πâ‡∏ô‡∏ó‡πå
// 		{SkillName: "‡∏à‡∏±‡∏î‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡πâ‡∏ô‡∏ó‡πå"},
// 		{SkillName: "MC ‡∏á‡∏≤‡∏ô"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡πÅ‡∏ú‡πà‡∏ô‡∏û‡∏±‡∏ö"},
// 		{SkillName: "‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô"},
// 		{SkillName: "‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏á‡∏≤‡∏ô"},
		
// 		// üßπ ‡∏á‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•
// 		{SkillName: "‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ö‡πâ‡∏≤‡∏ô"},
// 		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏"},
// 		{SkillName: "‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏∏‡∏ô‡∏±‡∏Ç"},
// 		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á"},
// 		{SkillName: "‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏á‡πà‡∏≤‡∏¢‡πÜ"},
// 		{SkillName: "‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î"},
// 		{SkillName: "‡∏à‡∏±‡∏î‡∏™‡∏ß‡∏ô"},
		
// 		// üéØ ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏≠‡∏∑‡πà‡∏ô‡πÜ
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡πá‡∏ß"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏à‡∏≥‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡πâ‡∏°‡πÅ‡∏¢‡πâ‡∏°‡πÅ‡∏à‡πà‡∏°‡πÉ‡∏™"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏∞‡∏î‡∏∂‡∏Å"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î"},
// 		{SkillName: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô"},
// 		{SkillName: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏°"},
// 		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡πá‡∏ß"},
// 	}

// 	for _, skill := range skills {
// 		db.FirstOrCreate(&skill, entity.Skill{SkillName: skill.SkillName})
// 	}

// 	// Users + Employer + Student (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
// 	passwordEmp, _ := bcrypt.GenerateFromPassword([]byte("123456"), 14)
// 	passwordStd, _ := bcrypt.GenerateFromPassword([]byte("777777"), 14)
// 	users := []entity.User{
// 		{Model: gorm.Model{ID: 1}, Username: "hormok_hr", Password: string(passwordEmp), Role: "Employer"},
// 		{Model: gorm.Model{ID: 2}, Username: "panida_t", Password: string(passwordStd), Role: "Student"},
// 	}

// 	for _, u := range users {
// 		db.FirstOrCreate(&u, u.ID)
// 	}

// 	// Employer
// 	birthdayEmp, _ := time.Parse("2006-01-02", "1990-05-15")
// 	employer := entity.Employer{
// 		Model: gorm.Model{ID: 1},
// 		Firstname: "‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥",
// 		Lasttname: "‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
// 		Email: "hr@hormok.co.th",
// 		CompanyName: "‡∏´‡πà‡∏≠‡∏´‡∏°‡∏Å ‡∏™‡∏ï‡∏π‡∏î‡∏¥‡πÇ‡∏≠",
// 		ContactPerson: "‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥ ‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
// 		Birthday: birthdayEmp,
// 		Phone: "081-234-5678",
// 		Address: "123 ‡∏°‡∏ó‡∏™. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π 4 ‡∏ï.‡∏™‡∏∏‡∏£‡∏ô‡∏≤‡∏£‡∏µ ‡∏≠.‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏à.‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤",
// 		UserID: users[0].ID,
// 		GenderID: genders[0].ID,
// 	}
// 	db.FirstOrCreate(&employer, employer.ID)

// 	// Student
// 	birthdayStd, _ := time.Parse("2006-01-02", "2004-12-31")
// 	student := entity.Student{
// 		Model: gorm.Model{ID: 1},
// 		Email: "panida.t@gmail.com",
// 		FirstName: "‡∏û‡∏ô‡∏¥‡∏î‡∏≤",
// 		LastName: "‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
// 		Birthday: birthdayStd,
// 		Age: 20,
// 		GPA: 3.5,
// 		Year: 3,
// 		Faculty: "‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
// 		Phone: "081-234-2154",
// 		Skills: "‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
// 		UserID: users[1].ID,
// 		GenderID: genders[1].ID,
// 		BankAccount: "8630211849",
// 		BankID: banks[3].ID,
// 	}
// 	db.FirstOrCreate(&student, student.ID)

// 	// Jobposts
// 	jobposts := []entity.Jobpost{
// 		{
// 			Model: gorm.Model{ID: 1},
// 			Title: "‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
// 			Description: "‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏¢‡πá‡∏ô 17.00 - 20.00 ‡∏ô.",
// 			Status: "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
// 			Salary: 250,
// 			EmployerID: employer.ID,
// 		},
// 		{
// 			Model: gorm.Model{ID: 2},
// 			Title: "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û",
// 			Description: "‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡πÄ‡∏û‡∏à",
// 			Status: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
// 			Salary: 600,
// 			EmployerID: employer.ID,
// 		},
// 	}

// 	for _, jp := range jobposts {
// 		db.FirstOrCreate(&jp, jp.ID)
// 	}

// 	// Payment
// 	payment1 := entity.Payments{
// 		Model: gorm.Model{ID: 1},
// 		Proof_of_Payment: "proof_01.jpg",
// 		Amount: billableItems[0].Amount,
// 		Datetime: time.Now().Add(-24 * time.Hour),
// 		BillableItemID: billableItems[0].ID,
// 		PaymentMethodID: paymentMethod.ID,
// 		StatusID: paymentStatuses[1].ID,
// 	}
// 	db.FirstOrCreate(&payment1, payment1.ID)
// }

package config

import (
	"log"
	"time"
	
	"golang.org/x/crypto/bcrypt"
	"github.com/KBook22/System-Analysis-and-Design/entity"
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"
	"gorm.io/gorm/logger"
)

var db *gorm.DB

func DB() *gorm.DB {
	return db
}

// ConnectionDB - ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ AutoMigrate
func ConnectionDB() {
	database, err := gorm.Open(sqlite.Open("sa-project.db"), &gorm.Config{
		Logger: logger.Default.LogMode(logger.Info), // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° debug mode
	})
	if err != nil {
		panic("failed to connect database")
	}

	db = database
	log.Println("‚úÖ Database connected successfully!")

	// ‚úÖ AutoMigrate ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling
	err = db.AutoMigrate(
		// --- ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å ---
		&entity.User{},
		&entity.Admin{},
		&entity.Student{},
		&entity.Employer{},
		&entity.Genders{},
		&entity.Banks{},
		
		// ‚úÖ Skills ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô entities ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
		&entity.Skill{},
		
		// --- ‡∏£‡∏∞‡∏ö‡∏ö Job / Payment ‡πÄ‡∏î‡∏¥‡∏° ---
		&entity.Jobpost{},
		&entity.Reviews{},
		&entity.Ratingscores{},
		&entity.Payments{},
		&entity.PaymentMethods{},
		&entity.BillableItems{},
		&entity.PaymentReports{},
		&entity.Statuses{},
		&entity.Discounts{},
		&entity.Orders{},
		&entity.AddonServices{},
		
		// --- ‡∏£‡∏∞‡∏ö‡∏ö Student Profile Post ---
		&entity.StudentProfilePost{},
		
		// --- ‡∏£‡∏∞‡∏ö‡∏ö Q&A ---
		&entity.FAQ{},
		&entity.RequestTicket{},
		&entity.TicketReply{},
	)

	if err != nil {
		log.Fatalf("‚ùå Failed to migrate database: %v", err)
	}
	
	log.Println("‚úÖ Database migration completed successfully!")
}

// SeedDatabase - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
func SeedDatabase() {
	log.Println("üå± Starting database seeding...")

	// Genders
	genders := []entity.Genders{
		{Model: gorm.Model{ID: 1}, Gender: "‡∏ä‡∏≤‡∏¢"},
		{Model: gorm.Model{ID: 2}, Gender: "‡∏´‡∏ç‡∏¥‡∏á"},
		{Model: gorm.Model{ID: 3}, Gender: "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"},
	}

	for _, g := range genders {
		if err := db.FirstOrCreate(&g, g.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding gender: %v", err)
		}
	}

	// Rating Scores
	ratingScores := []entity.Ratingscores{
		{Model: gorm.Model{ID: 1}, Ratingscorename: "‡πÅ‡∏¢‡πà‡∏°‡∏≤‡∏Å"},
		{Model: gorm.Model{ID: 2}, Ratingscorename: "‡πÅ‡∏¢‡πà"},
		{Model: gorm.Model{ID: 3}, Ratingscorename: "‡∏û‡∏≠‡πÉ‡∏ä‡πâ"},
		{Model: gorm.Model{ID: 4}, Ratingscorename: "‡∏î‡∏µ"},
		{Model: gorm.Model{ID: 5}, Ratingscorename: "‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°"},
	}

	for _, rs := range ratingScores {
		if err := db.FirstOrCreate(&rs, rs.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding rating score: %v", err)
		}
	}

	// Payment Method
	paymentMethod := entity.PaymentMethods{
		Model: gorm.Model{ID: 1},
		Methodname: "‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå",
	}
	if err := db.FirstOrCreate(&paymentMethod, paymentMethod.ID).Error; err != nil {
		log.Printf("‚ùå Error seeding payment method: %v", err)
	}

	// Banks
	banks := []entity.Banks{
		{Model: gorm.Model{ID: 1}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û"},
		{Model: gorm.Model{ID: 2}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô"},
		{Model: gorm.Model{ID: 3}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢"},
		{Model: gorm.Model{ID: 4}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢"},
		{Model: gorm.Model{ID: 5}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏ò‡∏ô‡∏ä‡∏≤‡∏ï"},
		{Model: gorm.Model{ID: 6}, Bankname: "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå"},
	}

	for _, b := range banks {
		if err := db.FirstOrCreate(&b, b.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding bank: %v", err)
		}
	}

	// Statuses
	paymentStatuses := []entity.Statuses{
		{Model: gorm.Model{ID: 1}, StatusName: "‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞"},
		{Model: gorm.Model{ID: 2}, StatusName: "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"},
		{Model: gorm.Model{ID: 3}, StatusName: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"},
		{Model: gorm.Model{ID: 4}, StatusName: "‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"},
	}

	for _, ps := range paymentStatuses {
		if err := db.FirstOrCreate(&ps, ps.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding payment status: %v", err)
		}
	}

	// Discounts
	discounts := []entity.Discounts{
		{
			Model: gorm.Model{ID: 1},
			DiscountName: "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 10%",
			DiscountValue: 10,
			Discounttype: "percentage",
			ValidFrom: time.Date(2024, 8, 1, 0, 0, 0, 0, time.UTC),
			ValidUntil: time.Date(2024, 8, 31, 0, 0, 0, 0, time.UTC),
		},
		{
			Model: gorm.Model{ID: 2},
			DiscountName: "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 15%",
			DiscountValue: 15,
			Discounttype: "percentage",
			ValidFrom: time.Date(2024, 9, 1, 0, 0, 0, 0, time.UTC),
			ValidUntil: time.Date(2024, 9, 30, 0, 0, 0, 0, time.UTC),
		},
	}

	for _, d := range discounts {
		if err := db.FirstOrCreate(&d, d.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding discount: %v", err)
		}
	}

	// Billable Items
	billableItems := []entity.BillableItems{
		{Model: gorm.Model{ID: 1}, Description: "‡∏Ñ‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π", Amount: 250},
		{Model: gorm.Model{ID: 2}, Description: "‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°", Amount: 50},
	}

	for _, bi := range billableItems {
		if err := db.FirstOrCreate(&bi, bi.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding billable item: %v", err)
		}
	}

	// ‚úÖ Skills ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå
	log.Println("üéØ Seeding Skills...")
	
	skills := []entity.Skill{
		// üõçÔ∏è ‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡∏≤‡∏¢
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ä‡∏á‡∏Å‡∏≤‡πÅ‡∏ü"},
		{SkillName: "‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏ô‡∏ä‡∏±‡πâ‡∏ô"},
		
		// üìä ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ü‡∏ü‡∏¥‡∏®‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô  
		{SkillName: "Microsoft Office"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏£‡πá‡∏ß"},
		{SkillName: "Excel ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
		{SkillName: "PowerPoint"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"},
		
		// üåê ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•
		{SkillName: "Facebook Marketing"},
		{SkillName: "Instagram Marketing"},
		{SkillName: "TikTok Marketing"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ Canva"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Content"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"},
		{SkillName: "Live ‡∏™‡∏î"},
		
		// üó£Ô∏è ‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£
		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏™‡∏ô‡∏ó‡∏ô‡∏≤"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠"},
		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏à‡∏µ‡∏ô"},
		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô"},
		{SkillName: "‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ"},
		
		// üìö ‡∏á‡∏≤‡∏ô‡∏™‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏ß
		{SkillName: "‡∏™‡∏≠‡∏ô‡∏Ñ‡∏ì‡∏¥‡∏ï"},
		{SkillName: "‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©"},
		{SkillName: "‡∏™‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"},
		{SkillName: "‡∏™‡∏≠‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå"},
		{SkillName: "‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏î‡πá‡∏Å"},
		{SkillName: "‡∏™‡∏≠‡∏ô‡∏î‡∏ô‡∏ï‡∏£‡∏µ"},
		{SkillName: "‡∏™‡∏≠‡∏ô‡πÄ‡∏ï‡πâ‡∏ô"},
		
		// üé® ‡∏á‡∏≤‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏õ‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏î‡∏ô‡∏ï‡∏£‡∏µ"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á"},
		
		// üöó ‡∏á‡∏≤‡∏ô‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡∏µ‡πà
		{SkillName: "‡∏Ç‡∏±‡∏ö‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå"},
		{SkillName: "‡∏Ç‡∏±‡∏ö‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå"},
		{SkillName: "‡πÄ‡∏î‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡∏µ‡πà‡∏≠‡∏≤‡∏´‡∏≤‡∏£"},
		{SkillName: "‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á"},
		{SkillName: "‡∏Ç‡∏±‡∏ö Grab"},
		{SkillName: "‡∏Ç‡∏±‡∏ö Foodpanda"},
		
		// üíª IT ‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏°‡∏¥‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
		{SkillName: "HTML/CSS ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
		{SkillName: "Photoshop ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Google Workspace"},
		
		// üèÉ‚Äç‚ôÄÔ∏è ‡∏á‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏ß‡πâ‡∏ô‡∏ó‡πå
		{SkillName: "‡∏à‡∏±‡∏î‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡πâ‡∏ô‡∏ó‡πå"},
		{SkillName: "MC ‡∏á‡∏≤‡∏ô"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡πÅ‡∏ú‡πà‡∏ô‡∏û‡∏±‡∏ö"},
		{SkillName: "‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô"},
		{SkillName: "‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏á‡∏≤‡∏ô"},
		
		// üßπ ‡∏á‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•
		{SkillName: "‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ö‡πâ‡∏≤‡∏ô"},
		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏"},
		{SkillName: "‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏∏‡∏ô‡∏±‡∏Ç"},
		{SkillName: "‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á"},
		{SkillName: "‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏á‡πà‡∏≤‡∏¢‡πÜ"},
		{SkillName: "‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î"},
		{SkillName: "‡∏à‡∏±‡∏î‡∏™‡∏ß‡∏ô"},
		
		// üéØ ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏≠‡∏∑‡πà‡∏ô‡πÜ
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡πá‡∏ß"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏à‡∏≥‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏¢‡∏¥‡πâ‡∏°‡πÅ‡∏¢‡πâ‡∏°‡πÅ‡∏à‡πà‡∏°‡πÉ‡∏™"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏∞‡∏î‡∏∂‡∏Å"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î"},
		{SkillName: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô"},
		{SkillName: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏°"},
		{SkillName: "‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡πá‡∏ß"},
	}

	// ‚úÖ ‡πÉ‡∏ä‡πâ transaction ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö performance ‡πÅ‡∏•‡∏∞ data consistency
	err := db.Transaction(func(tx *gorm.DB) error {
		createdCount := 0
		existingCount := 0
		
		for _, skill := range skills {
			var existingSkill entity.Skill
			
			// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ SkillName
			result := tx.Where("skill_name = ?", skill.SkillName).First(&existingSkill)
			
			if result.Error != nil {
				if result.Error == gorm.ErrRecordNotFound {
					// ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
					if err := tx.Create(&skill).Error; err != nil {
						log.Printf("‚ùå Error creating skill '%s': %v", skill.SkillName, err)
						return err
					}
					createdCount++
					log.Printf("‚úÖ Created skill: %s", skill.SkillName)
				} else {
					log.Printf("‚ùå Database error: %v", result.Error)
					return result.Error
				}
			} else {
				existingCount++
			}
		}
		
		log.Printf("üéØ Skills seeding summary: Created=%d, Existing=%d", createdCount, existingCount)
		return nil
	})

	if err != nil {
		log.Printf("‚ùå Error seeding skills: %v", err)
	} else {
		// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô skills ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
		var count int64
		db.Model(&entity.Skill{}).Count(&count)
		log.Printf("üéâ Skills seeding completed! Total skills in database: %d", count)
	}

	// Users + Employer + Student (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
	passwordEmp, _ := bcrypt.GenerateFromPassword([]byte("123456"), 14)
	passwordStd, _ := bcrypt.GenerateFromPassword([]byte("777777"), 14)
	users := []entity.User{
		{Model: gorm.Model{ID: 1}, Username: "hormok_hr", Password: string(passwordEmp), Role: "Employer"},
		{Model: gorm.Model{ID: 2}, Username: "panida_t", Password: string(passwordStd), Role: "Student"},
	}

	for _, u := range users {
		if err := db.FirstOrCreate(&u, u.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding user: %v", err)
		}
	}

	// Employer
	birthdayEmp, _ := time.Parse("2006-01-02", "1990-05-15")
	employer := entity.Employer{
		Model: gorm.Model{ID: 1},
		Firstname: "‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥",
		Lasttname: "‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
		Email: "hr@hormok.co.th",
		CompanyName: "‡∏´‡πà‡∏≠‡∏´‡∏°‡∏Å ‡∏™‡∏ï‡∏π‡∏î‡∏¥‡πÇ‡∏≠",
		ContactPerson: "‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡∏®‡∏¥‡∏£‡∏¥ ‡∏ñ‡∏≤‡∏ö‡∏∏‡∏ç‡∏®‡∏£‡∏µ",
		Birthday: birthdayEmp,
		Phone: "081-234-5678",
		Address: "123 ‡∏°‡∏ó‡∏™. ‡∏õ‡∏£‡∏∞‡∏ï‡∏π 4 ‡∏ï.‡∏™‡∏∏‡∏£‡∏ô‡∏≤‡∏£‡∏µ ‡∏≠.‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏à.‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤",
		UserID: users[0].ID,
		GenderID: genders[0].ID,
	}
	if err := db.FirstOrCreate(&employer, employer.ID).Error; err != nil {
		log.Printf("‚ùå Error seeding employer: %v", err)
	}

	// Student
	birthdayStd, _ := time.Parse("2006-01-02", "2004-12-31")
	student := entity.Student{
		Model: gorm.Model{ID: 1},
		Email: "panida.t@gmail.com",
		FirstName: "‡∏û‡∏ô‡∏¥‡∏î‡∏≤",
		LastName: "‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
		Birthday: birthdayStd,
		Age: 20,
		GPA: 3.5,
		Year: 3,
		Faculty: "‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
		Phone: "081-234-2154",
		Skills: "‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
		UserID: users[1].ID,
		GenderID: genders[1].ID,
		BankAccount: "8630211849",
		BankID: banks[3].ID,
	}
	if err := db.FirstOrCreate(&student, student.ID).Error; err != nil {
		log.Printf("‚ùå Error seeding student: %v", err)
	}

	// Jobposts
	jobposts := []entity.Jobpost{
		{
			Model: gorm.Model{ID: 1},
			Title: "‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏≤‡∏ö‡∏π",
			Description: "‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏¢‡πá‡∏ô 17.00 - 20.00 ‡∏ô.",
			Status: "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
			Salary: 250,
			EmployerID: employer.ID,
		},
		{
			Model: gorm.Model{ID: 2},
			Title: "‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û",
			Description: "‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡πÄ‡∏û‡∏à",
			Status: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
			Salary: 600,
			EmployerID: employer.ID,
		},
	}

	for _, jp := range jobposts {
		if err := db.FirstOrCreate(&jp, jp.ID).Error; err != nil {
			log.Printf("‚ùå Error seeding jobpost: %v", err)
		}
	}

	// Payment
	payment1 := entity.Payments{
		Model: gorm.Model{ID: 1},
		Proof_of_Payment: "proof_01.jpg",
		Amount: billableItems[0].Amount,
		Datetime: time.Now().Add(-24 * time.Hour),
		BillableItemID: billableItems[0].ID,
		PaymentMethodID: paymentMethod.ID,
		StatusID: paymentStatuses[1].ID,
	}
	if err := db.FirstOrCreate(&payment1, payment1.ID).Error; err != nil {
		log.Printf("‚ùå Error seeding payment: %v", err)
	}

	log.Println("üå± Database seeding completed successfully!")
}



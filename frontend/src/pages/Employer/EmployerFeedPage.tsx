// // src/pages/Employer/EmployerFeedPage.tsx
// import React, { useState, useEffect, useContext } from 'react';
// import { Link, useNavigate } from 'react-router-dom';
// import { Typography, Spin, Alert, List, Input, Tabs, Row, Col, Modal, Button, Space, Tag, Avatar } from 'antd';
// import { SearchOutlined, UserOutlined, EyeOutlined, MessageOutlined, SolutionOutlined, MailOutlined, PhoneOutlined, PlusOutlined } from '@ant-design/icons';
// import StudentProfileCard from '../../components/StudentProfileCard';
// import PageHeader from '../../components/PageHeader';
// import { getStudentProfilePosts } from '../../services/studentPostService';
// import { AuthContext } from '../../context/AuthContext';
// import type{ StudentProfilePost } from '../../types';

// const { Paragraph, Text } = Typography;

// const EmployerFeedPage: React.FC = () => {
//     const [posts, setPosts] = useState<StudentProfilePost[]>([]);
//     const [loading, setLoading] = useState<boolean>(true);
//     const [error, setError] = useState<string | null>(null);
//     const [searchTerm, setSearchTerm] = useState<string>('');
//     const [activeTab, setActiveTab] = useState<string>('all');
//     const [currentPage, setCurrentPage] = useState<number>(1);
//     const pageSize = 12;
//     const [isModalOpen, setIsModalOpen] = useState(false);
//     const [selectedPost, setSelectedPost] = useState<StudentProfilePost | null>(null);

//     const authContext = useContext(AuthContext);
//     const navigate = useNavigate();

//     useEffect(() => {
//         const fetchPosts = async () => {
//             setLoading(true);
//             try {
//                 const data = await getStudentProfilePosts();
//                 setPosts(Array.isArray(data) ? data : []);
//             } catch (err) {
//                 setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ');
//                 console.error(err);
//             } finally {
//                 setLoading(false);
//             }
//         };
//         fetchPosts();
//     }, []);

//     const filteredPosts = posts.filter(post => {
//         if (!post.student) return false;
//         const lowerSearch = searchTerm.toLowerCase();
//         const matchesSearch =
//             `${post.student.first_name} ${post.student.last_name}`.toLowerCase().includes(lowerSearch) ||
//             (post.skills || '').toLowerCase().includes(lowerSearch) ||
//             (post.student.faculty || '').toLowerCase().includes(lowerSearch);
//         const matchesTab = activeTab === 'all' || post.job_type === activeTab;
//         return matchesSearch && matchesTab;
//     });

//     const paginatedPosts = filteredPosts.slice((currentPage - 1) * pageSize, currentPage * pageSize);

//     const showModal = (post: StudentProfilePost) => {
//         setSelectedPost(post);
//         setIsModalOpen(true);
//     };

//     const handleCancel = () => {
//         setIsModalOpen(false);
//         setSelectedPost(null);
//     };

//     const tabItems = [
//       { key: 'all', label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' },
//       { key: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå', label: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå' },
//       { key: '‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', label: '‡∏á‡∏≤‡∏ô‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô' },
//       { key: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå', label: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå' },
//       { key: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥', label: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥' },
//     ];

//     if (loading) { return <div style={{ textAlign: 'center', marginTop: '50px' }}><Spin size="large" /></div>; }
//     if (error) { return <Alert message="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" description={error} type="error" showIcon style={{ margin: '24px' }} />; }

//     return (
//         <>
//             <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '24px' }}>
//                 <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>
//                     <PageHeader title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" />
//                     {authContext?.user?.role === 'student' && (
//                         <Button
//                             type="primary"
//                             icon={<PlusOutlined />}
//                             size="large"
//                             // üëá 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
//                             onClick={() => navigate('/feed/create')}
//                         >
//                             ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏´‡∏≤‡∏á‡∏≤‡∏ô
//                         </Button>
//                     )}
//                 </div>
                
//                 <Row gutter={[24, 24]}>
//                     <Col xs={24}>
//                         <Input
//                             size="large"
//                             placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠, ‡∏ó‡∏±‡∏Å‡∏©‡∏∞, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ì‡∏∞..."
//                             prefix={<SearchOutlined />}
//                             onChange={e => setSearchTerm(e.target.value)}
//                             style={{ marginBottom: '16px' }}
//                         />
//                         <Tabs
//                             defaultActiveKey="all"
//                             items={tabItems}
//                             onChange={key => { setActiveTab(key); setCurrentPage(1); }}
//                         />
//                         <List
//                             grid={{ gutter: 24, xs: 1, sm: 1, md: 1, lg: 1, xl: 2 }}
//                             dataSource={paginatedPosts}
//                             renderItem={post => (
//                                 <List.Item>
//                                     <StudentProfileCard post={post} onClick={() => showModal(post)} />
//                                 </List.Item>
//                             )}
//                             locale={{ emptyText: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç' }}
//                             pagination={{
//                                 current: currentPage,
//                                 pageSize: pageSize,
//                                 total: filteredPosts.length,
//                                 onChange: (page) => setCurrentPage(page),
//                                 style: { textAlign: 'center', marginTop: '24px' }
//                             }}
//                         />
//                     </Col>
//                 </Row>
//             </div>

//             {/* ... (Modal code is unchanged) ... */}
//             <Modal
//                 open={isModalOpen}
//                 onCancel={handleCancel}
//                 width={720}
//                 className="profile-modal"
//                 destroyOnClose
//                 footer={
//                     <Space>
//                         {selectedPost?.portfolio_url && (
//                             <a href={selectedPost.portfolio_url} target="_blank" rel="noopener noreferrer">
//                                 <Button icon={<EyeOutlined />}>‡∏î‡∏π‡∏ú‡∏•‡∏á‡∏≤‡∏ô</Button>
//                             </a>
//                         )}
//                         <Link to={`/profile/${selectedPost?.student.first_name}`}>
//                            <Button icon={<SolutionOutlined />}>‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Button>
//                         </Link>
//                         <Button type="primary" icon={<MessageOutlined />}>
//                             ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
//                         </Button>
//                     </Space>
//                 }
//             >
//                 {selectedPost && selectedPost.student && (
//                     <>
//                         <div className="modal-header-content">
//                             <Avatar size={64} icon={<UserOutlined />} />
//                             <div className="modal-header-info">
//                                 <h3 className="student-name">{selectedPost.student.first_name} {selectedPost.student.last_name}</h3>
//                                 <p className="student-faculty" style={{ margin: '2px 0' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏™‡∏≤‡∏Ç‡∏≤:</span> {selectedPost.student.faculty}
//                                 </p>
//                                 <p className="student-faculty" style={{ margin: '2px 0', marginLeft: '0px' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà:</span> {selectedPost.student.year}
//                                 </p>
//                             </div>
//                         </div>
//                         <div className="modal-body-section">
//                             <section className="modal-introduction">
//                                 <div className="modal-skills-title">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</div>
//                                 <Paragraph>{selectedPost.introduction}</Paragraph>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</div>
//                                 <Space direction="vertical">
//                                     <Text><MailOutlined style={{ marginRight: 8 }} />{selectedPost.student.email}</Text>
//                                     <Text><PhoneOutlined style={{ marginRight: 8 }} />{selectedPost.student.phone}</Text>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡∏´‡∏≤</div>
//                                 <Space size={[8, 8]} wrap>
//                                     <Tag color="geekblue">{selectedPost.job_type}</Tag>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
//                                 <div className="modal-skills-container">
//                                     <Space size={[8, 8]} wrap>
//                                         {(selectedPost.skills?.split(',').map(s => s.trim()).filter(s => s) || []).map(skill => (
//                                             <Tag key={skill}>{skill}</Tag>
//                                         ))}
//                                     </Space>
//                                 </div>
//                             </section>
//                         </div>
//                     </>
//                 )}
//             </Modal>
//         </>
//     );
// };

// export default EmployerFeedPage;

// // src/pages/Employer/EmployerFeedPage.tsx

// import React, { useState, useEffect, useContext } from 'react';
// import { Link, useNavigate } from 'react-router-dom';
// import { Typography, Spin, Alert, List, Input, Tabs, Row, Col, Modal, Button, Space, Tag, Avatar } from 'antd';
// import { SearchOutlined, UserOutlined, EyeOutlined, MessageOutlined, SolutionOutlined, MailOutlined, PhoneOutlined, PlusOutlined } from '@ant-design/icons';
// import StudentProfileCard from '../../components/StudentProfileCard';
// import PageHeader from '../../components/PageHeader';
// // --- vvvv START CODE CHANGE vvvv ---
// // 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà import ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// import { getStudentProfilePosts } from '../../services/studentPostService'; 
// // --- ^^^^ END CODE CHANGE ^^^^ ---
// import { AuthContext } from '../../context/AuthContext';
// import type{ StudentProfilePost } from '../../types';

// const { Paragraph, Text } = Typography;

// const EmployerFeedPage: React.FC = () => {
//     const [posts, setPosts] = useState<StudentProfilePost[]>([]);
//     const [loading, setLoading] = useState<boolean>(true);
//     const [error, setError] = useState<string | null>(null);
//     const [searchTerm, setSearchTerm] = useState<string>('');
//     const [activeTab, setActiveTab] = useState<string>('all');
//     const [currentPage, setCurrentPage] = useState<number>(1);
//     const pageSize = 12;
//     const [isModalOpen, setIsModalOpen] = useState(false);
//     const [selectedPost, setSelectedPost] = useState<StudentProfilePost | null>(null);

//     const authContext = useContext(AuthContext);
//     const navigate = useNavigate();

//     useEffect(() => {
//         const fetchPosts = async () => {
//             setLoading(true);
//             try {
//                 // --- vvvv START CODE CHANGE vvvv ---
//                 // 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
//                 const data = await getStudentProfilePosts(); 
//                 // --- ^^^^ END CODE CHANGE ^^^^ ---
//                 setPosts(Array.isArray(data) ? data : []);
//             } catch (err) {
//                 setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ');
//                 console.error(err);
//             } finally {
//                 setLoading(false);
//             }
//         };
//         fetchPosts();
//     }, []);

//     const filteredPosts = posts.filter(post => {
//         if (!post.student) return false;
//         const lowerSearch = searchTerm.toLowerCase();
//         const matchesSearch =
//             `${post.student.first_name} ${post.student.last_name}`.toLowerCase().includes(lowerSearch) ||
//             (post.skills || '').toLowerCase().includes(lowerSearch) ||
//             (post.student.faculty || '').toLowerCase().includes(lowerSearch);
//         const matchesTab = activeTab === 'all' || post.job_type === activeTab;
//         return matchesSearch && matchesTab;
//     });

//     const paginatedPosts = filteredPosts.slice((currentPage - 1) * pageSize, currentPage * pageSize);

//     const showModal = (post: StudentProfilePost) => {
//         setSelectedPost(post);
//         setIsModalOpen(true);
//     };

//     const handleCancel = () => {
//         setIsModalOpen(false);
//         setSelectedPost(null);
//     };

//     const tabItems = [
//       { key: 'all', label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' },
//       { key: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå', label: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå' },
//       { key: '‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', label: '‡∏á‡∏≤‡∏ô‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô' },
//       { key: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå', label: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå' },
//       { key: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥', label: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥' },
//     ];

//     if (loading) { return <div style={{ textAlign: 'center', marginTop: '50px' }}><Spin size="large" /></div>; }
//     if (error) { return <Alert message="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" description={error} type="error" showIcon style={{ margin: '24px' }} />; }

//     return (
//         <>
//             <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '24px' }}>
//                 <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>
//                     <PageHeader title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" />
//                     {authContext?.user?.role === 'student' && (
//                         <Button
//                             type="primary"
//                             icon={<PlusOutlined />}
//                             size="large"
//                             onClick={() => navigate('/feed/create')}
//                         >
//                             ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏´‡∏≤‡∏á‡∏≤‡∏ô
//                         </Button>
//                     )}
//                 </div>
                
//                 <Row gutter={[24, 24]}>
//                     <Col xs={24}>
//                         <Input
//                             size="large"
//                             placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠, ‡∏ó‡∏±‡∏Å‡∏©‡∏∞, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ì‡∏∞..."
//                             prefix={<SearchOutlined />}
//                             onChange={e => setSearchTerm(e.target.value)}
//                             style={{ marginBottom: '16px' }}
//                         />
//                         <Tabs
//                             defaultActiveKey="all"
//                             items={tabItems}
//                             onChange={key => { setActiveTab(key); setCurrentPage(1); }}
//                         />
//                         <List
//                             grid={{ gutter: 24, xs: 1, sm: 1, md: 1, lg: 1, xl: 2 }}
//                             dataSource={paginatedPosts}
//                             renderItem={post => (
//                                 <List.Item>
//                                     <StudentProfileCard post={post} onClick={() => showModal(post)} />
//                                 </List.Item>
//                             )}
//                             locale={{ emptyText: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç' }}
//                             pagination={{
//                                 current: currentPage,
//                                 pageSize: pageSize,
//                                 total: filteredPosts.length,
//                                 onChange: (page) => setCurrentPage(page),
//                                 style: { textAlign: 'center', marginTop: '24px' }
//                             }}
//                         />
//                     </Col>
//                 </Row>
//             </div>

//             {/* Modal code is unchanged */}
//             <Modal
//                 open={isModalOpen}
//                 onCancel={handleCancel}
//                 width={720}
//                 className="profile-modal"
//                 destroyOnClose
//                 footer={
//                     <Space>
//                         {selectedPost?.portfolio_url && (
//                             <a href={selectedPost.portfolio_url} target="_blank" rel="noopener noreferrer">
//                                 <Button icon={<EyeOutlined />}>‡∏î‡∏π‡∏ú‡∏•‡∏á‡∏≤‡∏ô</Button>
//                             </a>
//                         )}
//                         <Link to={`/profile/${selectedPost?.student.first_name}`}>
//                            <Button icon={<SolutionOutlined />}>‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Button>
//                         </Link>
//                         <Button type="primary" icon={<MessageOutlined />}>
//                             ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
//                         </Button>
//                     </Space>
//                 }
//             >
//                 {selectedPost && selectedPost.student && (
//                     <>
//                         <div className="modal-header-content">
//                             <Avatar size={64} icon={<UserOutlined />} />
//                             <div className="modal-header-info">
//                                 <h3 className="student-name">{selectedPost.student.first_name} {selectedPost.student.last_name}</h3>
//                                 <p className="student-faculty" style={{ margin: '2px 0' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏™‡∏≤‡∏Ç‡∏≤:</span> {selectedPost.student.faculty}
//                                 </p>
//                                 <p className="student-faculty" style={{ margin: '2px 0', marginLeft: '0px' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà:</span> {selectedPost.student.year}
//                                 </p>
//                             </div>
//                         </div>
//                         <div className="modal-body-section">
//                             <section className="modal-introduction">
//                                 <div className="modal-skills-title">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</div>
//                                 <Paragraph>{selectedPost.introduction}</Paragraph>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</div>
//                                 <Space direction="vertical">
//                                     <Text><MailOutlined style={{ marginRight: 8 }} />{selectedPost.student.email}</Text>
//                                     <Text><PhoneOutlined style={{ marginRight: 8 }} />{selectedPost.student.phone}</Text>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡∏´‡∏≤</div>
//                                 <Space size={[8, 8]} wrap>
//                                     <Tag color="geekblue">{selectedPost.job_type}</Tag>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
//                                 <div className="modal-skills-container">
//                                     <Space size={[8, 8]} wrap>
//                                         {(selectedPost.skills?.split(',').map(s => s.trim()).filter(s => s) || []).map(skill => (
//                                             <Tag key={skill}>{skill}</Tag>
//                                         ))}
//                                     </Space>
//                                 </div>
//                             </section>
//                         </div>
//                     </>
//                 )}
//             </Modal>
//         </>
//     );
// };

// export default EmployerFeedPage;

// src/pages/Employer/EmployerFeedPage.tsx

// import React, { useState, useEffect, useContext } from 'react';
// import { Link, useNavigate } from 'react-router-dom';
// import { Typography, Spin, Alert, List, Input, Tabs, Row, Col, Modal, Button, Space, Tag, Avatar } from 'antd';
// import { SearchOutlined, UserOutlined, EyeOutlined, MessageOutlined, SolutionOutlined, MailOutlined, PhoneOutlined, PlusOutlined } from '@ant-design/icons';
// import StudentProfileCard from '../../components/StudentProfileCard';
// import PageHeader from '../../components/PageHeader';
// import { getStudentProfilePosts } from '../../services/studentPostService'; 
// import { AuthContext } from '../../context/AuthContext';
// import type{ StudentProfilePost } from '../../types';

// const { Paragraph, Text } = Typography;

// const EmployerFeedPage: React.FC = () => {
//     const [posts, setPosts] = useState<StudentProfilePost[]>([]);
//     const [loading, setLoading] = useState<boolean>(true);
//     const [error, setError] = useState<string | null>(null);
//     const [searchTerm, setSearchTerm] = useState<string>('');
//     const [activeTab, setActiveTab] = useState<string>('all');
//     const [currentPage, setCurrentPage] = useState<number>(1);
//     const pageSize = 12;
//     const [isModalOpen, setIsModalOpen] = useState(false);
//     const [selectedPost, setSelectedPost] = useState<StudentProfilePost | null>(null);

//     const authContext = useContext(AuthContext);
//     const navigate = useNavigate();

//     useEffect(() => {
//         const fetchPosts = async () => {
//             setLoading(true);
//             try {
//                 // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
//                 const response = await getStudentProfilePosts(); 

//                 // --- vvvv START CODE CHANGE vvvv ---
//                 // ‚ú® ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‚ú®
//                 // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏°‡∏µ key ‡∏ä‡∏∑‡πà‡∏≠ data ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÄ‡∏õ‡πá‡∏ô Array ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
//                 if (response && Array.isArray(response.data)) {
//                     // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πà, ‡πÉ‡∏´‡πâ setPosts ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô response.data
//                     setPosts(response.data);
//                 } else {
//                     // ‡∏ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏ß‡πà‡∏≤‡∏á
//                     console.warn("API response is not in the expected format:", response);
//                     setPosts([]);
//                 }
//                 // --- ^^^^ END CODE CHANGE ^^^^ ---

//             } catch (err) {
//                 // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÄ‡∏ä‡πà‡∏ô Server ‡∏õ‡∏¥‡∏î)
//                 if (err instanceof Error) {
//                     setError(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ: ${err.message}`);
//                 } else {
//                     setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
//                 }
//                 console.error(err);
//             } finally {
//                 setLoading(false);
//             }
//         };
//         fetchPosts();
//     }, []);

//     // ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
//     const filteredPosts = posts.filter(post => {
//         if (!post.student) return false;
//         const lowerSearch = searchTerm.toLowerCase();
//         const matchesSearch =
//             `${post.student.first_name} ${post.student.last_name}`.toLowerCase().includes(lowerSearch) ||
//             (post.skills || '').toLowerCase().includes(lowerSearch) ||
//             (post.student.faculty || '').toLowerCase().includes(lowerSearch);
//         const matchesTab = activeTab === 'all' || post.job_type === activeTab;
//         return matchesSearch && matchesTab;
//     });

//     const paginatedPosts = filteredPosts.slice((currentPage - 1) * pageSize, currentPage * pageSize);

//     const showModal = (post: StudentProfilePost) => {
//         setSelectedPost(post);
//         setIsModalOpen(true);
//     };

//     const handleCancel = () => {
//         setIsModalOpen(false);
//         setSelectedPost(null);
//     };

//     const tabItems = [
//       { key: 'all', label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' },
//       { key: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå', label: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå' },
//       { key: '‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', label: '‡∏á‡∏≤‡∏ô‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô' },
//       { key: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå', label: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå' },
//       { key: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥', label: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥' },
//     ];

//     if (loading) { return <div style={{ textAlign: 'center', marginTop: '50px' }}><Spin size="large" /></div>; }
//     if (error) { return <Alert message="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" description={error} type="error" showIcon style={{ margin: '24px' }} />; }

//     return (
//         <>
//             <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '24px' }}>
//                 <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>
//                     <PageHeader title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" />
//                     {authContext?.user?.role === 'student' && (
//                         <Button
//                             type="primary"
//                             icon={<PlusOutlined />}
//                             size="large"
//                             onClick={() => navigate('/feed/create')}
//                         >
//                             ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏´‡∏≤‡∏á‡∏≤‡∏ô
//                         </Button>
//                     )}
//                 </div>
                
//                 <Row gutter={[24, 24]}>
//                     <Col xs={24}>
//                         <Input
//                             size="large"
//                             placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠, ‡∏ó‡∏±‡∏Å‡∏©‡∏∞, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ì‡∏∞..."
//                             prefix={<SearchOutlined />}
//                             onChange={e => setSearchTerm(e.target.value)}
//                             style={{ marginBottom: '16px' }}
//                         />
//                         <Tabs
//                             defaultActiveKey="all"
//                             items={tabItems}
//                             onChange={key => { setActiveTab(key); setCurrentPage(1); }}
//                         />
//                         <List
//                             grid={{ gutter: 24, xs: 1, sm: 1, md: 1, lg: 1, xl: 2 }}
//                             dataSource={paginatedPosts}
//                             renderItem={post => (
//                                 <List.Item>
//                                     <StudentProfileCard post={post} onClick={() => showModal(post)} />
//                                 </List.Item>
//                             )}
//                             locale={{ emptyText: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç' }}
//                             pagination={{
//                                 current: currentPage,
//                                 pageSize: pageSize,
//                                 total: filteredPosts.length,
//                                 onChange: (page) => setCurrentPage(page),
//                                 style: { textAlign: 'center', marginTop: '24px' }
//                             }}
//                         />
//                     </Col>
//                 </Row>
//             </div>

//             <Modal
//                 open={isModalOpen}
//                 onCancel={handleCancel}
//                 width={720}
//                 className="profile-modal"
//                 destroyOnClose
//                 footer={
//                     <Space>
//                         {selectedPost?.portfolio_url && (
//                             <a href={selectedPost.portfolio_url} target="_blank" rel="noopener noreferrer">
//                                 <Button icon={<EyeOutlined />}>‡∏î‡∏π‡∏ú‡∏•‡∏á‡∏≤‡∏ô</Button>
//                             </a>
//                         )}
//                         <Link to={`/profile/${selectedPost?.student.first_name}`}>
//                            <Button icon={<SolutionOutlined />}>‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Button>
//                         </Link>
//                         <Button type="primary" icon={<MessageOutlined />}>
//                             ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
//                         </Button>
//                     </Space>
//                 }
//             >
//                 {selectedPost && selectedPost.student && (
//                     <>
//                         <div className="modal-header-content">
//                             <Avatar size={64} icon={<UserOutlined />} />
//                             <div className="modal-header-info">
//                                 <h3 className="student-name">{selectedPost.student.first_name} {selectedPost.student.last_name}</h3>
//                                 <p className="student-faculty" style={{ margin: '2px 0' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏™‡∏≤‡∏Ç‡∏≤:</span> {selectedPost.student.faculty}
//                                 </p>
//                                 <p className="student-faculty" style={{ margin: '2px 0', marginLeft: '0px' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà:</span> {selectedPost.student.year}
//                                 </p>
//                             </div>
//                         </div>
//                         <div className="modal-body-section">
//                             <section className="modal-introduction">
//                                 <div className="modal-skills-title">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</div>
//                                 <Paragraph>{selectedPost.introduction}</Paragraph>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</div>
//                                 <Space direction="vertical">
//                                     <Text><MailOutlined style={{ marginRight: 8 }} />{selectedPost.student.email}</Text>
//                                     <Text><PhoneOutlined style={{ marginRight: 8 }} />{selectedPost.student.phone}</Text>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡∏´‡∏≤</div>
//                                 <Space size={[8, 8]} wrap>
//                                     <Tag color="geekblue">{selectedPost.job_type}</Tag>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
//                                 <div className="modal-skills-container">
//                                     <Space size={[8, 8]} wrap>
//                                         {(selectedPost.skills?.split(',').map(s => s.trim()).filter(s => s) || []).map(skill => (
//                                             <Tag key={skill}>{skill}</Tag>
//                                         ))}
//                                     </Space>
//                                 </div>
//                             </section>
//                         </div>
//                     </>
//                 )}
//             </Modal>
//         </>
//     );
// };

// export default EmployerFeedPage;

// src/pages/Employer/EmployerFeedPage.tsx

// import React, { useState, useEffect, useContext } from 'react';
// import { Link, useNavigate } from 'react-router-dom';
// import { Typography, Spin, Alert, List, Input, Tabs, Row, Col, Modal, Button, Space, Tag, Avatar } from 'antd';
// import { SearchOutlined, UserOutlined, EyeOutlined, MessageOutlined, SolutionOutlined, MailOutlined, PhoneOutlined, PlusOutlined } from '@ant-design/icons';
// import StudentProfileCard from '../../components/StudentProfileCard';
// import PageHeader from '../../components/PageHeader';
// import { getStudentProfilePosts } from '../../services/studentPostService';
// import { AuthContext } from '../../context/AuthContext';
// import type{ StudentProfilePost } from '../../types';

// const { Paragraph, Text } = Typography;

// const EmployerFeedPage: React.FC = () => {
//     const [posts, setPosts] = useState<StudentProfilePost[]>([]);
//     const [loading, setLoading] = useState<boolean>(true);
//     const [error, setError] = useState<string | null>(null);
//     const [searchTerm, setSearchTerm] = useState<string>('');
//     const [activeTab, setActiveTab] = useState<string>('all');
//     const [currentPage, setCurrentPage] = useState<number>(1);
//     const pageSize = 12;
//     const [isModalOpen, setIsModalOpen] = useState(false);
//     const [selectedPost, setSelectedPost] = useState<StudentProfilePost | null>(null);

//     const authContext = useContext(AuthContext);
//     const navigate = useNavigate();

//     useEffect(() => {
//         const fetchPosts = async () => {
//             setLoading(true);
//             try {
//                 const response = await getStudentProfilePosts();
                
//                 // --- vvvv START DEBUGGING CODE vvvv ---
//                 // ‚ú® ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 1: ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
//                 console.log("API Response:", response); 
//                 // ‚ú® ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2: ‡∏î‡∏π‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå
//                 console.log("Data to be set:", response.data);
//                 // --- ^^^^ END DEBUGGING CODE ^^^^ ---

//                 if (response && Array.isArray(response.data)) {
//                     setPosts(response.data);
//                 } else {
//                     console.warn("API response is not in the expected format:", response);
//                     setPosts([]);
//                 }
//             } catch (err) {
//                 // --- vvvv START DEBUGGING CODE vvvv ---
//                 // ‚ú® ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 3: ‡∏î‡∏π Error ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
//                 console.error("Failed to fetch posts:", err); 
//                 // --- ^^^^ END DEBUGGING CODE ^^^^ ---

//                 if (err instanceof Error) {
//                     setError(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ: ${err.message}`);
//                 } else {
//                     setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
//                 }
//             } finally {
//                 setLoading(false);
//             }
//         };
//         fetchPosts();
//     }, []);

//     // ... (‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) ...
//     const filteredPosts = posts.filter(post => {
//         if (!post.student) return false;
//         const lowerSearch = searchTerm.toLowerCase();
//         // --- vvvv START DEBUGGING CODE vvvv ---
//         // ‚ú® ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 4: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Backend (Faculty ‡πÄ‡∏õ‡πá‡∏ô Object)
//         const facultyName = post.faculty?.Name || 'N/A';
//         const matchesSearch =
//             `${post.student.first_name} ${post.student.last_name}`.toLowerCase().includes(lowerSearch) ||
//             (post.skills || '').toLowerCase().includes(lowerSearch) ||
//             facultyName.toLowerCase().includes(lowerSearch);
//         // --- ^^^^ END DEBUGGING CODE ^^^^ ---
//         const matchesTab = activeTab === 'all' || post.job_type === activeTab;
//         return matchesSearch && matchesTab;
//     });

//     const paginatedPosts = filteredPosts.slice((currentPage - 1) * pageSize, currentPage * pageSize);

//     const showModal = (post: StudentProfilePost) => {
//         setSelectedPost(post);
//         setIsModalOpen(true);
//     };

//     const handleCancel = () => {
//         setIsModalOpen(false);
//         setSelectedPost(null);
//     };

//     const tabItems = [
//       { key: 'all', label: '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' },
//       { key: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå', label: '‡∏û‡∏≤‡∏£‡πå‡∏ó‡πÑ‡∏ó‡∏°‡πå' },
//       { key: '‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', label: '‡∏á‡∏≤‡∏ô‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô' },
//       { key: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå', label: '‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå' },
//       { key: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥', label: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥' },
//     ];

//     if (loading) { return <div style={{ textAlign: 'center', marginTop: '50px' }}><Spin size="large" /></div>; }
//     if (error) { return <Alert message="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î" description={error} type="error" showIcon style={{ margin: '24px' }} />; }

//     return (
//         <>
//             <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '24px' }}>
//                 <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>
//                     <PageHeader title="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" />
//                     {authContext?.user?.role === 'student' && (
//                         <Button
//                             type="primary"
//                             icon={<PlusOutlined />}
//                             size="large"
//                             onClick={() => navigate('/feed/create')}
//                         >
//                             ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏´‡∏≤‡∏á‡∏≤‡∏ô
//                         </Button>
//                     )}
//                 </div>
                
//                 <Row gutter={[24, 24]}>
//                     <Col xs={24}>
//                         <Input
//                             size="large"
//                             placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠, ‡∏ó‡∏±‡∏Å‡∏©‡∏∞, ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ì‡∏∞..."
//                             prefix={<SearchOutlined />}
//                             onChange={e => setSearchTerm(e.target.value)}
//                             style={{ marginBottom: '16px' }}
//                         />
//                         <Tabs
//                             defaultActiveKey="all"
//                             items={tabItems}
//                             onChange={key => { setActiveTab(key); setCurrentPage(1); }}
//                         />
//                         <List
//                             grid={{
//                                 gutter: 24,
//                                 xs: 1,
//                                 sm: 2,
//                                 md: 2,
//                                 lg: 3,
//                                 xl: 4,
//                                 xxl: 4,
//                             }}
//                             dataSource={paginatedPosts}
//                             renderItem={post => (
//                                 <List.Item>
//                                     <StudentProfileCard post={post} onClick={() => showModal(post)} />
//                                 </List.Item>
//                             )}
//                             locale={{ emptyText: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç' }}
//                             pagination={{
//                                 current: currentPage,
//                                 pageSize: pageSize,
//                                 total: filteredPosts.length,
//                                 onChange: (page) => setCurrentPage(page),
//                                 style: { textAlign: 'center', marginTop: '24px' }
//                             }}
//                         />
//                     </Col>
//                 </Row>
//             </div>

//             <Modal
//                 open={isModalOpen}
//                 onCancel={handleCancel}
//                 width={720}
//                 className="profile-modal"
//                 destroyOnClose
//                 footer={
//                     <Space>
//                         {selectedPost?.portfolio_url && (
//                             <a href={selectedPost.portfolio_url} target="_blank" rel="noopener noreferrer">
//                                 <Button icon={<EyeOutlined />}>‡∏î‡∏π‡∏ú‡∏•‡∏á‡∏≤‡∏ô</Button>
//                             </a>
//                         )}
//                         {selectedPost?.student && (
//                             <Link to={`/profile/${selectedPost.student.ID}`}>
//                                <Button icon={<SolutionOutlined />}>‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Button>
//                             </Link>
//                         )}
//                         <Button type="primary" icon={<MessageOutlined />}>
//                             ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
//                         </Button>
//                     </Space>
//                 }
//             >
//                 {/* --- vvvv START DEBUGGING CODE vvvv --- */}
//                 {/* ‚ú® ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 5: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Modal ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Backend */}
//                 {selectedPost && selectedPost.student && (
//                     <>
//                         <div className="modal-header-content">
//                             <Avatar size={64} icon={<UserOutlined />} src={selectedPost.student.profile_image_url} />
//                             <div className="modal-header-info">
//                                 <h3 className="student-name">{selectedPost.student.first_name} {selectedPost.student.last_name}</h3>
//                                 <p className="student-faculty" style={{ margin: '2px 0' }}>
//     <span style={{ fontWeight: 500 }}>‡∏Ñ‡∏ì‡∏∞/‡∏™‡∏≤‡∏Ç‡∏≤:</span> {selectedPost.student?.faculty?.Name} / {selectedPost.student?.department?.Name}
// </p>
//                                 <p className="student-faculty" style={{ margin: '2px 0' }}>
//                                     <span style={{ fontWeight: 500 }}>‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ:</span> {selectedPost.year}
//                                 </p>
//                             </div>
//                         </div>
//                         <div className="modal-body-section">
//                             <section className="modal-introduction">
//                                 <div className="modal-skills-title">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</div>
//                                 <Paragraph>{selectedPost.introduction}</Paragraph>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</div>
//                                 <Space direction="vertical">
//                                     <Text><MailOutlined style={{ marginRight: 8 }} />{selectedPost.student.email}</Text>
//                                     <Text><PhoneOutlined style={{ marginRight: 8 }} />{selectedPost.student.phone}</Text>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô</div>
//                                 <Space size={[8, 8]} wrap>
//                                     <Tag color="geekblue">{selectedPost.job_type}</Tag>
//                                 </Space>
//                             </section>
//                             <section>
//                                 <div className="modal-skills-title">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©</div>
//                                 <div className="modal-skills-container">
//                                     <Space size={[8, 8]} wrap>
//                                         {(selectedPost.skills?.split(',').map(s => s.trim()).filter(s => s) || []).map(skill => (
//                                             <Tag key={skill}>{skill}</Tag>
//                                         ))}
//                                     </Space>
//                                 </div>
//                             </section>
//                         </div>
//                     </>
//                 )}
//                 {/* --- ^^^^ END DEBUGGING CODE ^^^^ --- */}
//             </Modal>
//         </>
//     );
// };

// export default EmployerFeedPage;
